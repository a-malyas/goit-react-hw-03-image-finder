{"version":3,"sources":["services/api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["fetchImages","query","page","axios","get","then","response","data","hits","Searchbar","state","handleInput","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","React","Component","ImageGalleryItem","src","alt","largeImageURL","onClick","data-largeimageurl","ImageGallery","images","children","map","imageObj","webformatURL","tags","id","Button","modalRoot","document","querySelector","Modal","window","addEventListener","onEscClick","removeEventListener","imageUrl","onModalClick","createPortal","App","modalIsOpen","searchQuery","nextPage","isLoading","loadPage","newArray","prevState","catch","error","console","log","finally","scrollTo","top","documentElement","scrollHeight","behavior","onThumbClick","event","dataset","largeimageurl","currentTarget","code","prevProps","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d65600c4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '20657531-55ab2713c33e5dcd49ca55cc6';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nfunction fetchImages(query, page) {\r\n    return (\r\n        axios\r\n            .get(`${BASE_URL}?key=${API_KEY}&q=${query}&page=${page}&per_page=12&image_type=photo&pretty=true`)\r\n                .then(response => response.data.hits)\r\n    )\r\n}\r\n\r\nexport { fetchImages };","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends React.Component {\r\n    state = {\r\n        query: '',\r\n    };\r\n\r\n    handleInput = (e) => {\r\n        this.setState({ query: e.target.value });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.query) this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\" >\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.query}\r\n                        onChange={this.handleInput}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ src, alt, largeImageURL, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        data-largeimageurl={largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  \r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nclass ImageGallery extends React.Component {\r\n    render() {\r\n        const { images, onClick, children } = this.props;\r\n        return (\r\n            <ul className=\"ImageGallery\">\r\n                {images.map((imageObj) => {\r\n                    return (\r\n                        <ImageGalleryItem\r\n                            onClick={onClick}\r\n                            key={imageObj.id}\r\n                            largeImageURL={imageObj.largeImageURL}\r\n                            src={imageObj.webformatURL}\r\n                            alt={imageObj.tags}\r\n                        />\r\n                    );\r\n                })}\r\n                {children}\r\n            </ul>\r\n        );\r\n    }\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({onClick}) => {\r\n    return (\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>Load more</button>\r\n    );\r\n  }\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n  }\r\n\r\nexport default Button;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends React.Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.props.onEscClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.props.onEscClick);\r\n  }\r\n\r\n  render() {\r\n    const { imageUrl, onModalClick } = this.props;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={onModalClick}>\r\n        <div className=\"Modal\">\r\n          <img src={imageUrl} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  imageUrl: PropTypes.string.isRequired,\r\n  onModalClick: PropTypes.func.isRequired,\r\n};\r\nexport default Modal;","import { Component } from 'react';\nimport { fetchImages } from './services/api';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport './App.css';\nimport Button from './components/Button/Button';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    modalIsOpen: false,\n    searchQuery: '',\n    images: [],\n    nextPage: 1,\n    isLoading: false,\n    page: 1\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) this.loadPage();\n  }\n\n  loadPage = () => {\n    this.setState({ isLoading: true });\n    fetchImages(this.state.searchQuery, this.state.nextPage)\n      .then(newArray => this.setState(prevState => {\n        return ({\n          images: [...prevState.images, ...newArray],\n          nextPage: prevState.nextPage + 1,\n        })\n      }))\n      .catch(error => console.log(error))\n      .finally(() => {\n        this.setState({ isLoading: false });\n        if (this.state.nextPage > 2)\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n      })\n  }\n\n  onSubmit = (query) => {\n    if (this.state.searchQuery === query) return;\n    this.setState({\n      searchQuery: query,\n      images: [],\n      largeImageURL: '',\n    });\n  };\n\n  onThumbClick = (event) => {\n    this.setState({\n      modalIsOpen: true,\n      largeImageURL: event.target.dataset.largeimageurl\n    });\n  }\n\n  onModalClick = (event) => {\n    if (event.target === event.currentTarget)\n      this.setState({ modalIsOpen: false });\n  }\n\n  onEscClick = (event) => {\n    if (event.code === 'Escape')\n      this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    const { modalIsOpen, largeImageURL, images, isLoading } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.onSubmit} />\n        <ImageGallery images={images} onClick={this.onThumbClick} isLoading={isLoading} />\n        {isLoading && (\n          <div className=\"loader\">\n            <Loader\n              type=\"Circles\" color=\"#00BFFF\" height={80} width={80}\n            />\n          </div>\n        )}\n        {images.length > 0 && <Button onClick={this.loadPage} />}\n        {modalIsOpen && <Modal imageUrl={largeImageURL} onModalClick={this.onModalClick} onEscClick={this.onEscClick} />}\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}